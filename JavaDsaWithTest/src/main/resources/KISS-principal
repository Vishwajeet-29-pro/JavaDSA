KISS is a well known design principal often applied in software development, including java.
    KISS stands for "keep it simple, stupid." and emphasizes Simplicity in design.

KISS Principal
    Definition: The KISS principal suggests that systems works best if they are kept simple rather than made complex.
    Simplicity should be a key goal in design, and unnecessary complexity should be avoided.

    Philosophy:
        1. Simplicity leads to better understanding and easy to maintenance.
        2. Complex systems are more prone to bugs and harder to modify.
        3. Simple solutions are often more efficient and effective.

    Apply in java:
        1. Write Clear and Concise Code
            1. Use meaningful variables and method name that clearly describe their purpose.
            2. Avoid writing overly complex methods; keep them small and focused on single task.

        2. Avoid Overengineering
            1. Don't add features or complexity that you donâ€™t currently need (also known as "YAGNI" - You Aren't
               Gonna Need It).
            2. Focus on solving the problem at hand with the simplest possible solution.

        3. Use Design Patterns Wisely
            1. Apply design patterns only when they simplify your design or solve a specific problem.
            2. Avoid using complex patterns where a simple solution would suffice.

        4. Refactor Code Regularly
            1. Continuously improve your code by refactoring it to make it cleaner and simpler.
            2. Eliminate redundancy and improve readability.

        5. Simplify Logic and Control Structures
            1. Use simple conditional statements and loops.
            2. Replace complex nested structures with simpler alternatives.

        6. Keep Classes and Methods Focused
            1. Ensure each class has a single responsibility (SRP).
            2. Keep methods short and focused on a single task.

        7. Avoid Unnecessary Dependencies
            1. Minimize dependencies between classes to reduce complexity and improve maintainability.
            2. Use interfaces and dependency injection to decouple components.

        Benefits of KISS
        Easier Maintenance: Simple code is easier to understand and maintain.
        Fewer Bugs: Simplicity reduces the likelihood of errors and bugs.
        Improved Performance: Simple solutions are often more efficient and performant.
        Better Collaboration: Simple code is easier for team members to understand and work with.
